@import 'variables';
@mixin BTN {
  @content;
  padding: 10px;
  background-color: $greenColor;
  width: max-content;
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin gradientAnimation($color, $transTime) {
  background-size: 0%;
  background-image: linear-gradient(
    150deg,
    $color 25%,
    rgba(250, 250, 250, 0) 50%,
    $color 75%
  );
  position: relative;
  z-index: 100;
  &:before {
    background-image: linear-gradient(
      150deg,
      $color 25%,
      rgba(250, 250, 250, 0) 50%,
      $color 75%
    );
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    border-radius: 5px;
    z-index: -100;
    transition: opacity $transTime;
  }
  &:hover {
    &:before {
      opacity: 1;
      background-size: 100%;
    }
  }
}

@mixin Loader {
  @content;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}

@mixin LoaderAfter {
  @content;
  content: '';
  box-sizing: border-box;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 96px;
  height: 96px;
  border-radius: 50%;
}

@mixin ResponsiveMedia($breakpoint) {
  @if ($breakpoint == verySmall) {
    @media (max-width: 495px) {
      @content;
    }
  }
  @if ($breakpoint == small) {
    @media ((min-width: 496px) and (max-width: 768px)) {
      @content;
    }
  }
  @if ($breakpoint == medium) {
    @media ((min-width: 769px) and (max-width: 900px)) {
      @content;
    }
  }
  @if ($breakpoint == large) {
    @media ((min-width: 901px) and (max-width: 1134px)) {
      @content;
    }
  }
}

// @mixin respond-small {
//   @media (max-width: 650px) {
//     @content;
//   }
// }

@mixin respond-medium {
  @media (max-width: 900px) {
    @content;
  }
}

@mixin respond-large {
  @media (max-width: 1200px) {
    @content;
  }
}
